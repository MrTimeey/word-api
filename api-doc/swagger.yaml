swagger: '2.0'
info:
  description: An API for retrieving and saving words
  version: 0.1.0
  title: Word Express API
  contact:
    name: GitHub
    url: 'https://github.com/MrTimeey/word-api'
  license:
    name: Licensed Under MIT
    url: 'https://github.com/MrTimeey/word-api/blob/main/LICENSE'
host: word-of-the-day.de
basePath: /api
schemes:
  - https
tags:
  - name: words
  - name: batch
  - name: random
  - name: search
paths:
  /words:
    get:
      tags:
        - words
      summary: Retrieve a list of all saved words
      description: Retrieve a list of all words from the DB.
      produces:
        - application/json
      responses:
        '200':
          description: A list of all words.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Response message
                example: Words found!
              words:
                type: array
                items:
                  $ref: '#/definitions/WordEntity'
    post:
      tags:
        - words
      summary: Add word to Database
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: The word to add
          required: true
          schema:
            $ref: '#/definitions/Word'
        - name: x-api-key
          in: header
          required: true
          type: string
      responses:
        '201':
          description: successful operation
          schema:
            type: object
            properties:
              message:
                type: string
                description: Response message
                example: Word created!
              word:
                $ref: '#/definitions/WordEntity'
        '400':
          description: 'If word, definition or language is missing'
          schema:
            type: object
            properties:
              message:
                type: string
                description: Response message
                example: Wrong format provided!
  '/words/{word_id}':
    get:
      tags:
        - words
      summary: Get word by ID
      produces:
        - application/json
      parameters:
        - name: word_id
          in: path
          description: ID of word to return
          required: true
          type: string
      responses:
        '200':
          description: Contains word or empty object
          schema:
            type: object
            properties:
              message:
                type: string
                description: Response message
                example: Word found!
              word:
                $ref: '#/definitions/WordEntity'
    put:
      tags:
        - words
      summary: Update word by ID
      produces:
        - application/json
      parameters:
        - name: word_id
          in: path
          description: ID of word to return
          required: true
          type: string
        - name: x-api-key
          in: header
          required: true
          type: string
      responses:
        '200':
          description: succesful operation
          schema:
            type: object
            properties:
              message:
                type: string
                description: Response message
                example: Word updated!
              word:
                $ref: '#/definitions/WordEntity'
    delete:
      tags:
        - words
      summary: Delete word by ID
      produces:
        - application/json
      parameters:
        - name: word_id
          in: path
          description: ID of word to return
          required: true
          type: string
        - name: x-api-key
          in: header
          required: true
          type: string
      responses:
        '200':
          description: succesful operation
          schema:
            type: object
            properties:
              message:
                type: string
                description: Response message
                example: Word removed!
              word:
                $ref: '#/definitions/WordEntity'
  /batch/create_all:
    post:
      tags:
        - batch
      summary: Add multiple words to database
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: The words to add
          required: true
          schema:
            type: object
            properties:
              words:  
                type: array
                items:
                  $ref: '#/definitions/Word'
          
        - name: x-api-key
          in: header
          required: true
          type: string
      responses:
        '201':
          description: successful operation
          schema:
            type: object
            properties:
              message:
                type: string
                description: Response message
                example: Words created!
              created:
                type: array
                items: 
                  $ref: '#/definitions/WordEntity'
              failed:
                type: array
                items: 
                  $ref: '#/definitions/WordEntity'
  /batch/delete_all:
    delete:
      tags:
        - batch
      summary: Delete all words from database
      produces:
        - application/json
      parameters:
        - name: x-api-key
          in: header
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              message:
                type: string
                description: Response message
                example: Deleted all words!
              
  /random:
    get:
      tags:
        - random
      summary: Get random word
      produces:
        - application/json
      responses:
        '200':
          description: Contains random word 
          schema:
            type: object
            properties:
              message:
                type: string
                description: Response message
                example: Random word found!
              word:
                $ref: '#/definitions/WordEntity'
  /random/{language}:
    get:
      tags:
        - random
      summary: Get random word for specific language
      parameters:
        - name: language
          in: path
          description: The language
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Contains random word 
          schema:
            type: object
            properties:
              message:
                type: string
                description: Response message
                example: Random word found!
              word:
                $ref: '#/definitions/WordEntity'
  /search:
    get:
      tags:
        - search
      summary: Get word by ID
      produces:
        - application/json
      parameters:
      - name: "word"
        in: "query"
        description: "The word for the search"
        required: true
        type: "string"
      responses:
        '200':
          description: Contains word or empty object
          schema:
            type: object
            properties:
              message:
                type: string
                description: Response message
                example: Word found!
              word:
                $ref: '#/definitions/WordEntity'
  /health:
    get:
      tags:
        - health
      summary: Check service health
      produces:
        - application/json
      responses:
        '200':
          description: Contains service information
          schema:
            $ref: '#/definitions/Health'
            
  
definitions:
  WordEntity:
    type: object
    properties:
      _id:
        type: string
        description: The MongoDB ID
        example: 60a109314fe65d00129003e0
      word:
        type: string
        description: The word
        example: Somnambulist
      definition:
        type: string
        description: The definition of given word
        example: (n.) A person who sleepwalks.
      language:
        type: string
        description: The language of given word
        example: en
      __v:
        type: integer
        description: The internal database object version
        example: 0
  Word:
    type: object
    properties:
      word:
        type: string
        description: The word
        example: Somnambulist
      definition:
        type: string
        description: The definition of given word
        example: (n.) A person who sleepwalks.
      language:
        type: string
        description: The language of given word
        example: en
  Health:
    type: object
    properties:
      uptime:
        type: string
        description: The uptime of the service
        example: 04d 04h 54m 29s
      message:
        type: string
        description: The response message
        example: ok
      timestamp: 
        type: string
        description: Current timestamp from server
        example: 04.06.2021 - 23:12:17 (+00:00)
